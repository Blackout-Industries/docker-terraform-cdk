name: Build.Develop

on:
  push:
    branches:
      - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.event.repository.name }}
  
jobs:
  gitversion:
      name: gitversion
      runs-on: ubuntu-latest
      outputs:
        major-minor-patch: ${{ steps.determine_version.outputs.GitVersion_MajorMinorPatch }}
        full-semver: ${{ steps.determine_version.outputs.GitVersion_FullSemVer }}
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
            
        - name: Install .NET Core SDK
          run: sudo apt-get -y install dotnet-sdk-6.0
  
        - name: Install GitVersion
          uses: gittools/actions/gitversion/setup@v3.0.0
          with:
            versionSpec: '6.x'
            
        - name: Determine Version
          id: determine_version
          uses: gittools/actions/gitversion/execute@v3.0.0

  build:
    name: "Build"
    permissions:
      contents: read
      packages: write
    needs: gitversion
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.0.5
    
    - name: Configure 1Password Service Account
      uses: 1password/load-secrets-action/configure@v1
      with:
        service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}

    - name: Load secret
      id: load_secrets
      uses: 1password/load-secrets-action@v1
      env:
        DOCKER_LOGIN: op://cicd/docker_hub/username
        DOCKER_TOKEN: op://cicd/docker_hub/password
        COSIGN_PASSWORD: op://cicd/cosign_password/password
        
    - name: Docker Login
      uses: docker/login-action@v2.2.0
      with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4.6.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha

    - name: Build and push Docker image
      id: build_push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy-dev:
    name: "Deploy Dev"
    permissions:
      contents: read
      packages: write
    needs: build
    environment: develop
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: test
      run: echo "hi"

  deploy-prod:
    name: "Deploy Prod"
    permissions:
      contents: read
      packages: write
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: production
    steps:
    - uses: actions/checkout@v3
    - name: test
      run: echo "hi"
